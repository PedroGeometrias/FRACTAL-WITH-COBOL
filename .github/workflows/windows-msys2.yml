name: build-windows-msys2
on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-gnucobol
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-SDL2
            mingw-w64-x86_64-binutils
            zip
            awk
            sed
            findutils

      # NEW: make cobc find default.conf in later steps too
      - name: Set COB_CONFIG_DIR for cobc
        shell: msys2 {0}
        run: |
          echo "COB_CONFIG_DIR=$(cygpath -w /mingw64/share/gnucobol/config)" >> $GITHUB_ENV

      - name: Build
        shell: msys2 {0}
        run: |
          set -euxo pipefail
          cobc -x -O2 -o burn_ship.exe \
            main.cob sdl_expose.c \
            -I/mingw64/include/SDL2 -lSDL2
          ls -al

      - name: Bundle DLLs (objdump)
        shell: msys2 {0}
        run: |
          set -euxo pipefail
          mkdir -p dist
          cp burn_ship.exe dist/
          DLLS=$(objdump -p dist/burn_ship.exe | awk '/DLL Name:/ {print $3}')
          for dll in $DLLS; do
            for root in /mingw64/bin /usr/bin; do
              [ -f "$root/$dll" ] && cp -n "$root/$dll" dist/ && break
            done
          done
          # optional: include versions, but don't fail if cobc isn't in PATH
          {
            echo "SDL2:  $(/mingw64/bin/sdl2-config --version || true)"
            echo "cobc:  $(cobc --version 2>/dev/null || true)"
            echo "gcc:   $(gcc --version | head -n1)"
          } > dist/VERSIONS.txt
          (cd dist && zip -9r ../burn_ship_win64.zip .)

      - uses: actions/upload-artifact@v4
        with:
          name: burn_ship_win64
          path: burn_ship_win64.zip

